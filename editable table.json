[{"id":"e96e9130.30511","type":"inject","z":"c5cf7504.389608","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":true,"onceDelay":"0.1","x":150,"y":400,"wires":[["d8fa241a.a20348"]]},{"id":"d8fa241a.a20348","type":"file in","z":"c5cf7504.389608","name":"spindleTimer.txt","filename":"/home/pi/Desktop/spindleTimer.txt","format":"utf8","chunk":false,"sendError":false,"x":360,"y":400,"wires":[["ee3afdbf.6e65d"]]},{"id":"ee3afdbf.6e65d","type":"function","z":"c5cf7504.389608","name":"settings obj","func":"//global.set(\"settings\",msg.payload);\nreturn msg;","outputs":1,"noerr":0,"x":530,"y":400,"wires":[["20bc4c2d.d86154"]]},{"id":"20bc4c2d.d86154","type":"json","z":"c5cf7504.389608","name":"","property":"payload","action":"","pretty":false,"x":670,"y":400,"wires":[["21b277df.478f88"]]},{"id":"21b277df.478f88","type":"ui_template","z":"c5cf7504.389608","group":"4dcbd716.03c458","name":"Spindle Timer","order":1,"width":24,"height":8,"format":"<html>\n    <head>\n        \n    </head>\n    <body>\n<style>\ntable, th, tr, td\n{\n    border: 1px black solid;\n    border-collapse: collapse;\n    text-align: center;\n}\n\ninput[type = number], input[type = text]\n{\n    background-color: white;\n    border: none;\n    word-wrap: break-word;\n    word-break: break-all;\n    text-align: center;\n}\n\nth\n{\n    background-color: #2a92b5;\n    padding : 7px 3px;\n    color: white;\n}\n\n</style>\n  \n\n    <form id=\"TableForm\" ng-submit=\"MyTableFormAction()\" >\n        <table align = \"center\" id=\"EmptableWithEditDelete1\">\n            <tr>\n                <th>\n                    Sr. No.\n                </th>\n                <th>\n                   Machine Number\n                </th>\n                <th>\n                    Machine Name\n                </th>\n                <th>\n                    Spindle Timer\n                </th>\n                <th>\n                    Edit\n                </th>\n                <th>\n                    Delete\n                </th>\n            </tr>\n            \n            <tr ng-repeat=\"Set in IntMsg.payload.SetData\" >\n                <td disabled=\"true\">\n                    {{$index+1}}\n                </td>\n                <td disabled=\"true\">\n                    Machine {{$index+1}}\n                </td>\n                <td>\n                    <input type=\"text\" id=\"EmpHighInput{{$index}}\" ng-model=\"Set.Name\"  disabled=\"true\" required> <!--ng-model=\"IntMsg.payload.SetData[$index].Name\"-->\n                </td>\n                <td>\n                    <input type=\"number\" step=\"0.01\" id=\"EmpHighInput{{$index}}\" ng-model=\"Set.spindleTimer\"  disabled=\"true\" required> <!--ng-model=\"IntMsg.payload.SetData[$index].Name\"-->\n                </td>\n                <td>\n                    <button type=\"button\"  ng-click=\"TableFormRowEditBtn($index)\" ng-style=\"{background: '#ffc399', color:'black', border : '1px solid #0093dc', cursor: 'allowed'}\">\n                        Edit\n                    </button>\n                </td>\n                <td>\n                    <button type=\"button\" ng-click=\"TableFormRowDeleteBtn($index)\" ng-style=\"{background: '#ffc399', color:'black', border : '1px solid #0093dc', cursor: 'allowed'}\">\n                        Delete\n                    </button>\n                </td>\n            </tr>\n        </table>\n        <br>\n        <br>\n\n       <button type=\"Submit\" name=\"Submit\" ng-style=\"{float: 'right', background: '#54e18a', color:'Black',padding: '4px 6px', border: 'none', cursor: 'allowed'}\"> \n       Submit Data\n       </button>\n       <button type=\"button\" ng-click=\"TableAddFirstRecord()\" ng-style=\"{float: 'left', background: '#54e18a', color:'Black',padding: '4px 6px', border: 'none', cursor: 'allowed'}\"> Add Record\n           \n       </button>\n           \n       \n    </form>\n\n<script>\n//send({payload:myFunction1()})\n//few learnigs:  if msg.pyload is used to link data to html tags like \n//<input type=\"text\" id=\"EmpId\" name=\"fname\" value={{msg.payload.TSetData.Selectedobj}} disabled > \n//then \n//ensure orginal data variables in msg.payload are intact through out the session/user interaction. \n\n//\"{{angular_var}}\"  syntax is used in html to pass varible data from angular to html tags\n//angular function send({payload:var/funct}) is used to send the msg to node red using ng-click directives. it updates msg.payload of entire template. \n// if your html view tags like input msg/table/dropdowns are getting reset that means\n//while sending msg, orginal msg got disturbed.\n// to solve this issue you can preserve original msg by adding new varibles to orginal msg.payload .\n// this is allowed but you should not disturb incoming msg.payload varibales data structure.\n// i.e say incoming msg.payload had data structure like msg={\"payload\":{\"emp\":employees}}\n//employees=[{\"name\":\"e1\",\"id\":1,\"dept\":\"dept1\",\"div\":\"div1\"},{\"name\":\"e2\",\"id\":2,\"dept\":\"dept2\",\"div\":\"div2\"},{\"name\":\"e3\",\"id\":3,\"dept\":\"dept3\",\"div\":\"div3\"}]\n// in this case you can add msg={\"payload\":{\"emp\":employees},{\"newVar\":newVarData}} this will works as orignal msg.payload.emp is not disturbed and new object \"NewVar is added\"\n// you can chage values of all varibles . that will not create any error or reset of view.\n\n\n// to check node-red ui is working properly , type \"http://127.0.0.1:1880/ui/\" in chrome browser and click\n//on broweser three dots menu-->more tools-->developer tools ensure at riht side of broweser debug window is opend\n// click on Consol tab to see error/status mssages.\n// you can use console.log(\"your_var_name\"); to see the value\n\n  var test=document.getElementById(\"EmpId\");\n\n(function(scope) {\n    // use this func\n    scope.IntMsg={\"payload\":{\"SetData\":[{}]}};\n    \n  scope.$watch('msg', function(msg) {\n    if (msg) {\n      // Do something when msg arrives\n            scope.IntMsg=msg;\n  \n    console.log(msg.payload);\n    }\n    });\n\nn    //\n    scope.TableFormRowEditBtn=function MyTableFormEditBtn(index){\n        document.getElementById(\"EmptableWithEditDelete1\").rows[index+1].cells[2].getElementsByTagName(\"input\")[0].disabled=false\n        document.getElementById(\"EmptableWithEditDelete1\").rows[index+1].cells[3].getElementsByTagName(\"input\")[0].disabled=false\n        \n        //document.getElementById(\"DivtableWithEditDelete\").rows[index+1].cells[1] provides row-1 column 1 cell. in this cell. as index in JS starts with zero,need to do +1 to get first row.\n        //to access input tag from row-1,column-1, \"getElementsByTagName(\"input\")[0]\" is used.[0] provides first input tag in this context.\n        \n        //console.log(scope.msg.payload.MyFormData.Edit[index]);\n        \n    }\n\n\n    scope.TableAddFirstRecord=function MyTableAddFirstRecordBtn(){\n        //Array index in JS variable starts from Zero  where as table row index starts from 1 so index is added with +1\n        console.log(\"TableAddFirstRecord clicked\");\n        var dummy={\"Pressure\":\"\",};\n        scope.IntMsg.payload.SetData.push(dummy);\n    }\n\n\n    scope.TableFormAddRowBtn=function MyTableFormAddRowBtn(index){\n        //Array index in JS variable starts from Zero  where as table row index starts from 1 so index is added with +1\n       var dummy={\"Pressure\":\"\"};\n        scope.IntMsg.payload.SetData.splice(index+1, 0, dummy);\n    }\n    scope.MyTableFormAction= function MyTableFormData(){\n        var i;\n        for (i = 0; i < scope.IntMsg.payload.SetData.length; i++) {\n            document.getElementById(\"EmptableWithEditDelete1\").rows[i+1].cells[2].getElementsByTagName(\"input\")[0].disabled=true\n            document.getElementById(\"EmptableWithEditDelete1\").rows[i+1].cells[3].getElementsByTagName(\"input\")[0].disabled=true\n        }\n        \n        console.log(\"MyTableFormData\");\n        console.log(scope.IntMsg.payload.SetData);\n        window.confirm(\"Data Saved\");\n        scope.send({\"payload\":(scope.IntMsg.payload)});\n        \n    }\n    scope.TableFormRowDeleteBtn=function MyTableFormRowDeleteBtn(index){\n        var txt;\n        var r = confirm(\"Press OK to Confim Delete \");\n        if (r == true) {\n            scope.IntMsg.payload.SetData.splice(index,1);\n            scope.MyTableFormAction();\n            console.log([\"TableFormRowDeleteBtn\"],index);\n        }\n        \n\n    }\n    \n})(scope);\n\n</script>\n</body>\n</html>","storeOutMessages":true,"fwdInMessages":true,"templateScope":"local","x":820,"y":400,"wires":[["946b852b.371118"]]},{"id":"946b852b.371118","type":"file","z":"c5cf7504.389608","name":"spindleTimer.txt","filename":"/home/pi/Desktop/spindleTimer.txt","appendNewline":false,"createDir":true,"overwriteFile":"true","x":1060,"y":400,"wires":[["fc8a0892.aab748","943a9bfa.220978"]]},{"id":"fc8a0892.aab748","type":"debug","z":"c5cf7504.389608","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":1390,"y":400,"wires":[]},{"id":"943a9bfa.220978","type":"function","z":"c5cf7504.389608","name":"SetVal","func":"var data = msg.payload.SetData;\nvar n= data.length;\n\n\nfor(i=0;i<n;i++)\n{\n    global.set('Machine'+(i+1) + 'Name', msg.payload.SetData[i].Name);\n    global.set('Machine'+(i+1) + 'spindleTimer', msg.payload.SetData[i].spindleTimer);\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":1230,"y":440,"wires":[["fc8a0892.aab748"]]},{"id":"4dcbd716.03c458","type":"ui_group","z":"","name":"Spindle Settings","tab":"3ca9a14e.418b2e","order":4,"disp":true,"width":"24","collapse":false},{"id":"3ca9a14e.418b2e","type":"ui_tab","z":"","name":"Settings","icon":"dashboard","order":2,"disabled":false,"hidden":false}]